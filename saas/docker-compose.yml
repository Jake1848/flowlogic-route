version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: flowlogic_postgres
    environment:
      POSTGRES_DB: flowlogic_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: flowlogic_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # SaaS Backend API
  saas-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flowlogic_saas_api
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/flowlogic_saas
      ASYNC_DATABASE_URL: postgresql+asyncpg://postgres:password@postgres:5432/flowlogic_saas
      REDIS_URL: redis://redis:6379/0
      ENVIRONMENT: development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: flowlogic_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@flowlogic.ai
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - dev
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: flowlogic_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:

networks:
  default:
    name: flowlogic_network