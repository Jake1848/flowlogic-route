# Production Docker Compose for FlowLogic RouteAI with Frontend
# Deploy with: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

version: '3.8'

services:
  # Frontend React App
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    image: flowlogic/frontend:latest
    container_name: flowlogic-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=${FRONTEND_API_URL:-http://localhost:8001}
      - REACT_APP_MAPBOX_TOKEN=${MAPBOX_ACCESS_TOKEN:-}
      - REACT_APP_SITE_NAME=${SITE_NAME:-FlowLogic RouteAI}
    networks:
      - flowlogic-network
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN_NAME:-app.flowlogic.ai}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Traefik Reverse Proxy with SSL
  traefik:
    image: traefik:v3.0
    container_name: flowlogic-traefik
    restart: unless-stopped
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ACME_EMAIL:-admin@flowlogic.ai}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--global.checkNewVersion=false"
      - "--global.sendAnonymousUsage=false"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt
    networks:
      - flowlogic-network
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME:-flowlogic.ai}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      # HTTP to HTTPS redirect
      - "traefik.http.routers.web-redirect.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.web-redirect.entrypoints=web"
      - "traefik.http.routers.web-redirect.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # Update API service labels for Traefik
  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN_NAME:-flowlogic.ai}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8001"

  # Update core service labels for Traefik  
  core:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.core.rule=Host(`core.${DOMAIN_NAME:-flowlogic.ai}`)"
      - "traefik.http.routers.core.entrypoints=websecure" 
      - "traefik.http.routers.core.tls.certresolver=letsencrypt"
      - "traefik.http.services.core.loadbalancer.server.port=8000"

volumes:
  traefik-letsencrypt:
    driver: local

networks:
  flowlogic-network:
    external: true